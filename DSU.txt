struct DSU{
	vector<int> P;
	vector<int> sz;
	int N;
	
	void init(int n){
		N = n;
		P = vector<int>(N);
		sz = vector<int>(N, 1);
		iota(P.begin(), P.end(), 0);
	}
	
	int getRoot(int x){
		return (x == P[x] ? x : P[x] = getRoot(P[x]));
	}
	
	bool unite(int x, int y){
		x = getRoot(x);
		y = getRoot(y);
		
		if(sz[x] < sz[y])swap(x, y);
		
		if(x != y){
			P[y] = x;
			sz[x] += sz[y];
			return true;
		}
		
		return false;
	}
};
